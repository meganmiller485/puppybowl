{"ast":null,"code":"var _jsxFileName = \"/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createRoot } from 'react-dom/client';\nimport PupList from \"./PupList\";\nimport SinglePup from \"./SinglePup\";\n//this is will wrap around the app so we can use it on entire application\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PuppyMain = () => {\n  _s();\n  //set our state as empty array with variable name players\n  //setPlayers will be our function that manipulates the state of our variable players\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState({});\n\n  //get api info for players and assign it to our players state\n  const getPlayers = async setPlayers => {\n    try {\n      const response = await fetch(\"https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players\");\n      const data = await response.json();\n      setPlayers(data.data.players);\n    } catch (error) {\n      console.error('oops! Trouble fetching players', error);\n    }\n  };\n  //this is not ideal but we needed to target the specific data and we were getting back data that was too shallow\n\n  const getSinglePlayer = async (setSelectedPlayer, playerId) => {\n    try {\n      const response = await fetch(`https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players/${playerId}`); //use variable names\n      const data = await response.json();\n      setSelectedPlayer(data.data.player);\n    } catch (error) {\n      console.error('Uh oh, trouble fetching a player!', error);\n    }\n  };\n  useEffect(() => {\n    getPlayers(setPlayers);\n  }, []);\n\n  //setting up form state\n  const [nameofpup, setnameofpup] = useState(\"\");\n  const [breed, setbreed] = useState(\"\");\n\n  // will likely need to define one pup so that we can iterate through our array and\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-player-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n          console.log(\"Hello\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Name\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nameofpup,\n          onChange: event => {\n            setnameofpup(event.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Breed\",\n          children: \"Breed: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: breed,\n          onChange: event => {\n            setbreed(event.target.value);\n          },\n          type: \"text\",\n          placeholder: \"Breed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"all-players-container\",\n      children: [selectedPlayer.id ? /*#__PURE__*/_jsxDEV(SinglePup, {\n        selectedPlayer: selectedPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(PupList, {\n        players: players,\n        getSinglePlayer: getSinglePlayer,\n        setSelectedPlayer: setSelectedPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(PuppyMain, \"OAWtaIDpSZINIpv1zQPjWF3Xhyk=\");\n_c = PuppyMain;\nexport default PuppyMain;\nconst appElement = document.getElementById(\"app\");\nconst root = createRoot(appElement);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(PuppyMain, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 1\n}, this));\nvar _c;\n$RefreshReg$(_c, \"PuppyMain\");","map":{"version":3,"names":["React","useEffect","useState","createRoot","PupList","SinglePup","BrowserRouter","Route","Routes","PuppyMain","players","setPlayers","selectedPlayer","setSelectedPlayer","getPlayers","response","fetch","data","json","error","console","getSinglePlayer","playerId","player","nameofpup","setnameofpup","breed","setbreed","event","preventDefault","log","target","value","id","appElement","document","getElementById","root","render"],"sources":["/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/index.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {createRoot} from 'react-dom/client';\nimport PupList from \"./PupList\";\nimport SinglePup from \"./SinglePup\";\n//this is will wrap around the app so we can use it on entire application\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n\n\nconst PuppyMain = () => {\n   \n    //set our state as empty array with variable name players\n    //setPlayers will be our function that manipulates the state of our variable players\n    const [players, setPlayers] = useState([]);\n    const [selectedPlayer, setSelectedPlayer] = useState({});\n\n\n   //get api info for players and assign it to our players state\n    const getPlayers = async (setPlayers) => {\n        try {\n            const response = await fetch (\"https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players\");\n            const data = await response.json();\n            setPlayers(data.data.players);\n        } catch (error){\n        console.error('oops! Trouble fetching players', error);}\n    };\n    //this is not ideal but we needed to target the specific data and we were getting back data that was too shallow\n    \n    \n\n    const getSinglePlayer = async (setSelectedPlayer, playerId) => {\n        try {\n            const response = await fetch (`https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players/${playerId}`); //use variable names\n            const data = await response.json();\n            setSelectedPlayer(data.data.player);\n          } catch (error) {\n            console.error('Uh oh, trouble fetching a player!', error);}\n    };\n  \n\n\n    useEffect(() => {\n      getPlayers(setPlayers);\n    \n    }, []);\n\n   //setting up form state\n    const [nameofpup, setnameofpup] = useState(\"\");\n    const [breed, setbreed] = useState(\"\");\n\n  \n    \n\n\n    // will likely need to define one pup so that we can iterate through our array and\n    return( \n        <div id=\"main\">\n            <div id=\"routes\">\n              \n            </div>\n            \n            <div id=\"new-player-form\">\n                <form onSubmit={(event) => {event.preventDefault(); console.log(\"Hello\")}}>\n                    <label htmlFor=\"Name\">Name: </label>\n                    <input value = {nameofpup} onChange={(event) => {setnameofpup(event.target.value)}} type=\"text\" placeholder=\"Name\"></input>\n                    <label htmlFor=\"Breed\">Breed: </label>\n                    <input value = {breed} onChange={(event) => {setbreed(event.target.value)}} type=\"text\" placeholder=\"Breed\"></input>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n            \n            <div id=\"all-players-container\">\n                    {selectedPlayer.id ? (<SinglePup selectedPlayer = {selectedPlayer}/>\n                    ) : (\n                        <PupList \n                        players = {players}\n                        getSinglePlayer = {getSinglePlayer}\n                        setSelectedPlayer = {setSelectedPlayer}/>\n                    )};\n            </div>\n        </div>\n    );\n    \n};\n\nexport default PuppyMain;\n\nconst appElement = document.getElementById(\"app\");\nconst root = createRoot(appElement);\n\nroot.render(\n<BrowserRouter>\n    <PuppyMain />\n</BrowserRouter>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}