{"ast":null,"code":"var _jsxFileName = \"/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/PupCards.js\";\nimport React from 'react';\nimport SinglePup from './SinglePup';\n\n//props is our backpack that we put our pupData into in index.js - we called it players\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PupCards = props => {\n  console.log(props);\n\n  //create a variable that will hold our mapped players\n  //go into backpack, pull out our folder called players, map through and create each player\n  const PupsToMap = props.players.map(player => {\n    //return all of this data for each player \n    return /*#__PURE__*/_jsxDEV(SinglePup, {\n      player: player\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n    // <div className=\"single-player-card\" key = {player.id}>\n    // <div className=\"header-info\">\n    //                             {/* {//*change the access point to just player instead of props.players//} */}\n    //     <p className=\"pup-title\">{player.name}</p>\n    //     <p className=\"pup-number\">#{player.id}</p>\n    // </div>\n    // <img src={player.imageUrl} />\n    // <button className=\"detail-button\" data-id={player.id}>See details</button>\n    // <button className=\"delete-button\" data-id={player.id}>Remove from roster</button>\n    // </div>  \n    ;\n  });\n  //we need to put all of the data we just created as pupstomap into a new div\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"PupContainer\",\n    children: PupsToMap\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n_c = PupCards;\nexport default PupCards;\nvar _c;\n$RefreshReg$(_c, \"PupCards\");","map":{"version":3,"names":["React","SinglePup","PupCards","props","console","log","PupsToMap","players","map","player","id"],"sources":["/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/PupCards.js"],"sourcesContent":["import React from 'react';\nimport SinglePup from './SinglePup';\n\n\n\n\n\n//props is our backpack that we put our pupData into in index.js - we called it players\nconst PupCards = (props) => {\n    console.log(props);\n      \n\n//create a variable that will hold our mapped players\n                //go into backpack, pull out our folder called players, map through and create each player\nconst PupsToMap = props.players.map((player) => {\n           //return all of this data for each player \n        return(\n            <SinglePup player = {player} key = {player.id}/>\n            // <div className=\"single-player-card\" key = {player.id}>\n            // <div className=\"header-info\">\n            //                             {/* {//*change the access point to just player instead of props.players//} */}\n            //     <p className=\"pup-title\">{player.name}</p>\n            //     <p className=\"pup-number\">#{player.id}</p>\n            // </div>\n            // <img src={player.imageUrl} />\n            // <button className=\"detail-button\" data-id={player.id}>See details</button>\n            // <button className=\"delete-button\" data-id={player.id}>Remove from roster</button>\n            // </div>  \n            );\n        });\n        //we need to put all of the data we just created as pupstomap into a new div\n        return (\n            <div id = \"PupContainer\">\n                {PupsToMap}\n            </div>)\n};\n\nexport default PupCards;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;;AAMnC;AAAA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;EAGtB;EACgB;EAChB,MAAMG,SAAS,GAAGH,KAAK,CAACI,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IACrC;IACH,oBACI,QAAC,SAAS;MAAC,MAAM,EAAIA;IAAO,GAAQA,MAAM,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;EAEJ,CAAC,CAAC;EACF;EACA,oBACI;IAAK,EAAE,EAAG,cAAc;IAAA,UACnBJ;EAAS;IAAA;IAAA;IAAA;EAAA,QACR;AAClB,CAAC;AAAC,KA3BIJ,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}