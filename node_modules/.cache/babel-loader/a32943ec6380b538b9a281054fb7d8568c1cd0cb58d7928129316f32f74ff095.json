{"ast":null,"code":"// Add your cohort name to the cohortName variable below, replacing the 'COHORT-NAME' placeholder\nconst cohortName = '2211-FTB-ET-WEB-FT';\n// Use the APIURL variable for fetch requests\nconst APIURL = `https://fsa-puppy-bowl.herokuapp.com/api/${cohortName}/`;\nexport const fetchAllPlayers = async () => {\n  try {\n    const response = await fetch(`${APIURL}/players`);\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return result.data.players;\n  } catch (err) {\n    console.error('Uh oh, trouble fetching players!', err);\n  }\n};\nexport const fetchSinglePlayer = async playerId => {\n  try {\n    const response = await fetch(`${APIURL}/players/${playerId}`);\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return result.data.player;\n  } catch (err) {\n    console.error(`Oh no, trouble fetching player #${playerId}!`, err);\n  }\n};\nexport const addNewPlayer = async playerObj => {\n  try {\n    const response = await fetch(`${APIURL}/players`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(playerObj)\n    });\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return result.data.player;\n  } catch (err) {\n    console.error('Oops, something went wrong with adding that player!', err);\n  }\n};\nexport const removePlayer = async playerId => {\n  try {\n    const response = await fetch(`${APIURL}/players/${playerId}`, {\n      method: 'DELETE'\n    });\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return;\n  } catch (err) {\n    console.error(`Whoops, trouble removing player #${playerId} from the roster!`, err);\n  }\n};","map":{"version":3,"names":["cohortName","APIURL","fetchAllPlayers","response","fetch","result","json","error","data","players","err","console","fetchSinglePlayer","playerId","player","addNewPlayer","playerObj","method","headers","body","JSON","stringify","removePlayer"],"sources":["/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/ajaxHelpers.js"],"sourcesContent":["// Add your cohort name to the cohortName variable below, replacing the 'COHORT-NAME' placeholder\nconst cohortName = '2211-FTB-ET-WEB-FT';\n// Use the APIURL variable for fetch requests\nconst APIURL = `https://fsa-puppy-bowl.herokuapp.com/api/${cohortName}/`;\n\nexport const fetchAllPlayers = async () => {\n  try {\n    const response = await fetch(`${APIURL}/players`);\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return result.data.players;\n  } catch (err) {\n    console.error('Uh oh, trouble fetching players!', err);\n  }\n};\n\nexport const fetchSinglePlayer = async (playerId) => {\n  try {\n    const response = await fetch(`${APIURL}/players/${playerId}`);\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return result.data.player;\n  } catch (err) {\n    console.error(`Oh no, trouble fetching player #${playerId}!`, err);\n  }\n};\n\nexport const addNewPlayer = async (playerObj) => {\n  try {\n    const response = await fetch(`${APIURL}/players`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(playerObj),\n    });\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return result.data.player;\n  } catch (err) {\n    console.error('Oops, something went wrong with adding that player!', err);\n  }\n};\n\nexport const removePlayer = async (playerId) => {\n  try {\n    const response = await fetch(`${APIURL}/players/${playerId}`, {\n      method: 'DELETE',\n    });\n    const result = await response.json();\n    if (result.error) throw result.error;\n    return;\n  } catch (err) {\n    console.error(\n      `Whoops, trouble removing player #${playerId} from the roster!`,\n      err\n    );\n  }\n};"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAG,oBAAoB;AACvC;AACA,MAAMC,MAAM,GAAI,4CAA2CD,UAAW,GAAE;AAExE,OAAO,MAAME,eAAe,GAAG,YAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,UAAS,CAAC;IACjD,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpC,IAAID,MAAM,CAACE,KAAK,EAAE,MAAMF,MAAM,CAACE,KAAK;IACpC,OAAOF,MAAM,CAACG,IAAI,CAACC,OAAO;EAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACJ,KAAK,CAAC,kCAAkC,EAAEG,GAAG,CAAC;EACxD;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,YAAWY,QAAS,EAAC,CAAC;IAC7D,MAAMR,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpC,IAAID,MAAM,CAACE,KAAK,EAAE,MAAMF,MAAM,CAACE,KAAK;IACpC,OAAOF,MAAM,CAACG,IAAI,CAACM,MAAM;EAC3B,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZC,OAAO,CAACJ,KAAK,CAAE,mCAAkCM,QAAS,GAAE,EAAEH,GAAG,CAAC;EACpE;AACF,CAAC;AAED,OAAO,MAAMK,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,UAAS,EAAE;MAChDgB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;IAChC,CAAC,CAAC;IACF,MAAMX,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpC,IAAID,MAAM,CAACE,KAAK,EAAE,MAAMF,MAAM,CAACE,KAAK;IACpC,OAAOF,MAAM,CAACG,IAAI,CAACM,MAAM;EAC3B,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZC,OAAO,CAACJ,KAAK,CAAC,qDAAqD,EAAEG,GAAG,CAAC;EAC3E;AACF,CAAC;AAED,OAAO,MAAMY,YAAY,GAAG,MAAOT,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,YAAWY,QAAS,EAAC,EAAE;MAC5DI,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMZ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpC,IAAID,MAAM,CAACE,KAAK,EAAE,MAAMF,MAAM,CAACE,KAAK;IACpC;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACJ,KAAK,CACV,oCAAmCM,QAAS,mBAAkB,EAC/DH,GAAG,CACJ;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}