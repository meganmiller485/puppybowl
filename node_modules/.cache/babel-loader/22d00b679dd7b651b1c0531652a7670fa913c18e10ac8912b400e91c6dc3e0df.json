{"ast":null,"code":"var _jsxFileName = \"/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createRoot } from 'react-dom/client';\nimport PupCards from \"./PupCards\";\n//this is will wrap around the app so we can use it on entire application\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PuppyMain = () => {\n  _s();\n  //set our state as empty array with variable name players\n  //setPlayers will be our function that manipulates the state of our variable players\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setselectedPlayer] = useState({});\n\n  //get api info for players and assign it to our players state\n  const getPlayers = async () => {\n    const response = await fetch(\"https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players\");\n    const data = await response.json();\n    //this is not ideal but we needed to target the specific data and we were getting back data that was too shallow\n    setPlayers(data.data.players);\n    const getSinglePlayer = async () => {\n      const response = await fetch(`https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players/${players.id}`);\n      const singleData = await response.json();\n      console.log(\"this is single data\" + singleData);\n    };\n    setselectedPlayer(singleData.data.player);\n  };\n  useEffect(() => {\n    getPlayers(setPlayers);\n  }, []);\n\n  // will likely need to define one pup so that we can iterate through our array and\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"all-players-container\",\n    children: /*#__PURE__*/_jsxDEV(PupCards, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PuppyMain, \"ARIjKk8B/wsz14/HjynZX09hJts=\");\n_c = PuppyMain;\nconst appElement = document.getElementById(\"app\");\nconst root = createRoot(appElement);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(PuppyMain, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 1\n}, this));\nvar _c;\n$RefreshReg$(_c, \"PuppyMain\");","map":{"version":3,"names":["React","useEffect","useState","createRoot","PupCards","BrowserRouter","PuppyMain","players","setPlayers","selectedPlayer","setselectedPlayer","getPlayers","response","fetch","data","json","getSinglePlayer","id","singleData","console","log","player","appElement","document","getElementById","root","render"],"sources":["/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/index.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {createRoot} from 'react-dom/client';\nimport PupCards from \"./PupCards\";\n//this is will wrap around the app so we can use it on entire application\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\nconst PuppyMain = () => {\n   \n    //set our state as empty array with variable name players\n    //setPlayers will be our function that manipulates the state of our variable players\n    const [players, setPlayers] = useState([]);\n    const [selectedPlayer, setselectedPlayer] = useState({});\n\n\n   //get api info for players and assign it to our players state\n    const getPlayers = async () => {\n    const response = await fetch (\"https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players\");\n    const data = await response.json();\n    //this is not ideal but we needed to target the specific data and we were getting back data that was too shallow\n    setPlayers(data.data.players);\n    \n\n\n    const getSinglePlayer = async () => {\n        const response = await fetch (`https://fsa-puppy-bowl.herokuapp.com/api/2211-FTB-ET-WEB-FT/players/${players.id}`);\n        const singleData = await response.json();\n        console.log(\"this is single data\" + singleData);\n    };\n    setselectedPlayer(singleData.data.player);\n\n\n    };\n     useEffect(() => {\n      getPlayers(setPlayers);\n    }, []);\n\n\n\n    \n\n\n    // will likely need to define one pup so that we can iterate through our array and\n    return( \n        <div id=\"all-players-container\">\n           {/* calling our component Pupcards and passing in our backpack of pupdata */}\n                {<PupCards players = {players} />} \n         </div>);\n    \n    \n};\n\nconst appElement = document.getElementById(\"app\");\nconst root = createRoot(appElement);\n\nroot.render(\n<BrowserRouter>\n    <PuppyMain />\n</BrowserRouter>\n);"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA,SAASC,aAAa,QAAQ,kBAAkB;AAAC;AAIjD,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpB;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAGzD;EACC,MAAMS,UAAU,GAAG,YAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qEAAqE,CAAC;IACpG,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC;IACAP,UAAU,CAACM,IAAI,CAACA,IAAI,CAACP,OAAO,CAAC;IAI7B,MAAMS,eAAe,GAAG,YAAY;MAChC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAG,uEAAsEN,OAAO,CAACU,EAAG,EAAC,CAAC;MAClH,MAAMC,UAAU,GAAG,MAAMN,QAAQ,CAACG,IAAI,EAAE;MACxCI,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGF,UAAU,CAAC;IACnD,CAAC;IACDR,iBAAiB,CAACQ,UAAU,CAACJ,IAAI,CAACO,MAAM,CAAC;EAGzC,CAAC;EACApB,SAAS,CAAC,MAAM;IACfU,UAAU,CAACH,UAAU,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAON;EACA,oBACI;IAAK,EAAE,EAAC,uBAAuB;IAAA,uBAEtB,QAAC,QAAQ;MAAC,OAAO,EAAID;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAClC;AAGf,CAAC;AAAC,GA3CID,SAAS;AAAA,KAATA,SAAS;AA6Cf,MAAMgB,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AACjD,MAAMC,IAAI,GAAGtB,UAAU,CAACmB,UAAU,CAAC;AAEnCG,IAAI,CAACC,MAAM,eACX,QAAC,aAAa;EAAA,uBACV,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACD,CACf;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}