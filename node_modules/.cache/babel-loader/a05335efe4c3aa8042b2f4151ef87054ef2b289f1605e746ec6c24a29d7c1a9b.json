{"ast":null,"code":"import { fetchSinglePlayer, fetchAllPlayers, addNewPlayer, removePlayer } from './ajaxHelpers';\nconst playerContainer = document.getElementById('all-players-container');\nconst newPlayerFormContainer = document.getElementById('new-player-form');\nconst RenderAllPlayers = playerList => {\n  if (!playerList || !playerList.length) {\n    playerContainer.innerHTML = '<h3>No players to display!</h3>';\n    return;\n  }\n  let playerContainerHTML = '';\n  playerList.map(pup => {\n    let pupHTML = `\n      <div class=\"single-player-card\">\n        <div class=\"header-info\">\n          <p class=\"pup-title\">${pup.name}</p>\n          <p class=\"pup-number\">#${pup.id}</p>\n        </div>\n        <img src=\"${pup.imageUrl}\" alt=\"photo of ${pup.name} the puppy\">\n        <button class=\"detail-button\" data-id=${pup.id}>See details</button>\n        <button class=\"delete-button\" data-id=${pup.id}>Remove from roster</button>\n      </div>\n    `;\n    playerContainerHTML += pupHTML;\n  });\n  playerContainer.innerHTML = playerContainerHTML;\n  let detailButtons = [...document.getElementsByClassName('detail-button')];\n  detailButtons.forEach(button => {\n    button.addEventListener('click', async () => {\n      const player = await fetchSinglePlayer(button.dataset.id);\n      renderSinglePlayer(player);\n    });\n  });\n  let deleteButtons = [...document.getElementsByClassName('delete-button')];\n  deleteButtons.forEach(button => {\n    button.addEventListener('click', async () => {\n      await removePlayer(button.dataset.id);\n      const players = await fetchAllPlayers();\n      RenderAllPlayers(players);\n    });\n  });\n};\n_c = RenderAllPlayers;\nexport default RenderAllPlayers;\nexport const renderSinglePlayer = playerObj => {\n  if (!playerObj || !playerObj.id) {\n    playerContainer.innerHTML = \"<h3>Couldn't find data for this player!</h3>\";\n    return;\n  }\n  let pupHTML = `\n    <div class=\"single-player-view\">\n      <div class=\"header-info\">\n        <p class=\"pup-title\">${playerObj.name}</p>\n        <p class=\"pup-number\">#${playerObj.id}</p>\n      </div>\n      <p>Team: ${playerObj.team ? playerObj.team.name : 'Unassigned'}</p>\n      <p>Breed: ${playerObj.breed}</p>\n      <img src=\"${playerObj.imageUrl}\" alt=\"photo of ${playerObj.name} the puppy\">\n      <button id=\"see-all\">Back to all players</button>\n    </div>\n  `;\n  playerContainer.innerHTML = pupHTML;\n  let seeAllButton = document.getElementById('see-all');\n  seeAllButton.addEventListener('click', async () => {\n    const players = await fetchAllPlayers();\n    renderAllPlayers(players);\n  });\n};\nexport const renderNewPlayerForm = () => {\n  let formHTML = `\n    <form>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" name=\"name\" />\n      <label for=\"breed\">Breed:</label>\n      <input type=\"text\" name=\"breed\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n  `;\n  newPlayerFormContainer.innerHTML = formHTML;\n  let form = document.querySelector('#new-player-form > form');\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n    let playerData = {\n      name: form.elements.name.value,\n      breed: form.elements.breed.value\n    };\n    await addNewPlayer(playerData);\n    const players = await fetchAllPlayers();\n    renderAllPlayers(players);\n    form.elements.name.value = '';\n    form.elements.breed.value = '';\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"RenderAllPlayers\");","map":{"version":3,"names":["fetchSinglePlayer","fetchAllPlayers","addNewPlayer","removePlayer","playerContainer","document","getElementById","newPlayerFormContainer","RenderAllPlayers","playerList","length","innerHTML","playerContainerHTML","map","pup","pupHTML","name","id","imageUrl","detailButtons","getElementsByClassName","forEach","button","addEventListener","player","dataset","renderSinglePlayer","deleteButtons","players","playerObj","team","breed","seeAllButton","renderAllPlayers","renderNewPlayerForm","formHTML","form","querySelector","event","preventDefault","playerData","elements","value"],"sources":["/Users/meganmiller/Documents/FullStack/course-work/week-4/PuppyBowlProj/src/renderHelpers.js"],"sourcesContent":["import {fetchSinglePlayer, fetchAllPlayers, addNewPlayer, removePlayer} from './ajaxHelpers';\n\nconst playerContainer = document.getElementById('all-players-container');\nconst newPlayerFormContainer = document.getElementById('new-player-form');\n\nconst RenderAllPlayers = (playerList) => {\n  if(!playerList || !playerList.length) {\n    playerContainer.innerHTML = '<h3>No players to display!</h3>';\n    return;\n  }\n\n  let playerContainerHTML = '';\n  playerList.map(pup => {\n    let pupHTML = `\n      <div class=\"single-player-card\">\n        <div class=\"header-info\">\n          <p class=\"pup-title\">${pup.name}</p>\n          <p class=\"pup-number\">#${pup.id}</p>\n        </div>\n        <img src=\"${pup.imageUrl}\" alt=\"photo of ${pup.name} the puppy\">\n        <button class=\"detail-button\" data-id=${pup.id}>See details</button>\n        <button class=\"delete-button\" data-id=${pup.id}>Remove from roster</button>\n      </div>\n    `;\n    playerContainerHTML += pupHTML;\n  });\n  playerContainer.innerHTML = playerContainerHTML;\n\n  let detailButtons = [...document.getElementsByClassName('detail-button')];\n  detailButtons.forEach(button => {\n    button.addEventListener('click', async () => {\n      const player = await fetchSinglePlayer(button.dataset.id);\n      renderSinglePlayer(player);\n    });\n  });\n\n  let deleteButtons = [...document.getElementsByClassName('delete-button')];\n  deleteButtons.forEach(button => {\n    button.addEventListener('click', async () => {\n      await removePlayer(button.dataset.id);\n      const players = await fetchAllPlayers();\n      RenderAllPlayers(players);\n    });\n  });\n};\nexport default RenderAllPlayers;\n\nexport const renderSinglePlayer = (playerObj) => {\n  if(!playerObj || !playerObj.id) {\n    playerContainer.innerHTML = \"<h3>Couldn't find data for this player!</h3>\";\n    return;\n  }\n\n  let pupHTML = `\n    <div class=\"single-player-view\">\n      <div class=\"header-info\">\n        <p class=\"pup-title\">${playerObj.name}</p>\n        <p class=\"pup-number\">#${playerObj.id}</p>\n      </div>\n      <p>Team: ${playerObj.team ? playerObj.team.name : 'Unassigned'}</p>\n      <p>Breed: ${playerObj.breed}</p>\n      <img src=\"${playerObj.imageUrl}\" alt=\"photo of ${playerObj.name} the puppy\">\n      <button id=\"see-all\">Back to all players</button>\n    </div>\n  `;\n  playerContainer.innerHTML = pupHTML;\n\n  let seeAllButton = document.getElementById('see-all');\n  seeAllButton.addEventListener('click', async () => {\n    const players = await fetchAllPlayers();\n    renderAllPlayers(players);\n  });\n}\n\nexport const renderNewPlayerForm = () => {\n  let formHTML = `\n    <form>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" name=\"name\" />\n      <label for=\"breed\">Breed:</label>\n      <input type=\"text\" name=\"breed\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n  `;\n  newPlayerFormContainer.innerHTML = formHTML;\n\n  let form = document.querySelector('#new-player-form > form');\n  form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n    let playerData = {\n      name: form.elements.name.value,\n      breed: form.elements.breed.value\n    }\n    await addNewPlayer(playerData);\n    const players = await fetchAllPlayers();\n    renderAllPlayers(players);\n    form.elements.name.value = '';\n    form.elements.breed.value = '';\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}